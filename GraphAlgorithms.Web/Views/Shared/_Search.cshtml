@model SearchModel

@{
    string ViewID = string.Format("SearchView_{0}", Guid.NewGuid().ToString().Replace("-", ""));
    string ViewDataObj = string.Format("{0}_ViewData", ViewID);
}

<div id="@ViewID" class="w-full flex flex-row mb-4">
    <div class="w-1/2 flex flex-col">
        <div class="flex flex-row mt-4">
            <select asp-for="SearchByID" asp-items="Model.SearchBy" class="grow basis-2/6 sl-searchby mr-2 form-input-field">
                <option value="-1">- Please select -</option>
            </select>

            <div class="grow basis-3/6">
                <span class="field-text-container hidden">
                    <input asp-for="TextValue" type="text" placeholder="Enter value" class="field-text form-input-field">
                </span>
                <span class="field-number-container hidden">
                    <input asp-for="NumberValue" type="number" placeholder="Enter value" step="1" min="0" class="field-number form-input-field">
                </span>
                <span class="field-number-range-container flex flex-row hidden">
                    <input asp-for="NumberRangeFromValue" type="number" placeholder="From" step="1" min="0" class="mr-2 field-number-range-from form-input-field">
                    <span>-</span>
                    <input asp-for="NumberRangeToValue" type="number" placeholder="To" step="1" min="0" class="ml-2 field-number-range-to form-input-field">
                </span>
                <span class="field-date-range-container flex flex-row hidden">
                    <input asp-for="DateRangeFromValue" type="date" class="mr-2 field-date-range-from form-input-field">
                    <span>-</span>
                    <input asp-for="DateRangeToValue" type="date" class="ml-2 field-date-range-to form-input-field">
                </span>

                @*Draw containers for Multi Select Lists*@
                @foreach (var searchParam in Model.SearchParams)
                {
                    if (searchParam.ParamType == GraphAlgorithms.Shared.SearchParamType.MultiSelectList)
                    {
                        <span class="field-multi-select-container flex flex-row hidden" data-id="@searchParam.Key">
                            @Html.Partial("_MultiSelectList", new MultiSelectListModel(searchParam.MultiSelectListID, searchParam.MultiSelectItems))
                        </span>
                    }
                }
            </div>

            <div class="basis-1/6">
                <button type="button" class="btn-save btn-add-param ml-2 hidden">
                    <i class="fa-solid fa-plus"></i>
                </button>
            </div>
        </div>

        <div class="flex flex-row mt-4">
            <label asp-for="SortBy"></label>&nbsp;
            <select asp-for="SortByID" asp-items="Model.SortBy" class="grow basis-2/6 sl-sortby form-input-field"></select>
        </div>

        <div class="flex flex-row mt-4 mb-8">
            <button type="button" class="btn-save btn-search mr-2">
                <i class="fas fa-save"></i> Search
            </button>
        </div>
    </div>
    
    <div class="w-1/2 flex flex-col border border-gray-300 p-2">
        <h1 class="text-md font-semibold">Selected Parameters: <button type="button" class="btn-clear-search-params">Clear all</button></h1>
        <div class="selected-parameters-container grid grid-cols-3 gap-2">

        </div>
    </div>
</div>

<script type="text/javascript">
    var @(ViewDataObj) = {
        viewID: "@ViewID",
        container: $("#@ViewID"),
        baseUrl: "@(Model.BaseUrl)",

        searchParamsJSON: '@Html.Raw(Model.SearchParamsJSON)',
        searchParams: JSON.parse('@Html.Raw(Model.SearchParamsJSON)'),
        selectedSearchParamsJSON: '@Html.Raw(Model.SelectedSearchParamsJSON)',
        selectedSearchParams: JSON.parse('@Html.Raw(Model.SelectedSearchParamsJSON)'),
        additionalQueryParamsJSON: '@Html.Raw(Model.AdditionalQueryParamsJSON)',
        additionalQueryParams: JSON.parse('@Html.Raw(Model.AdditionalQueryParamsJSON)'),

        slSearchBy: $("#@ViewID .sl-searchby"),
        slSortBy: $("#@ViewID .sl-sortby"),

        fldText: $("#@ViewID .field-text"),
        fldTextContainer: $("#@ViewID .field-text-container"),

        fldNumber: $("#@ViewID .field-number"),
        fldNumberContainer: $("#@ViewID .field-number-container"),

        fldNumberRangeFrom: $("#@ViewID .field-number-range-from"),
        fldNumberRangeTo: $("#@ViewID .field-number-range-to"),
        fldNumberRangeContainer: $("#@ViewID .field-number-range-container"),

        fldDateRangeFrom: $("#@ViewID .field-date-range-from"),
        fldDateRangeTo: $("#@ViewID .field-date-range-to"),
        fldDateRangeContainer: $("#@ViewID .field-date-range-container"),

        fldMultiSelectContainers: $("#@ViewID .field-multi-select-container"),

        btnSearch: $("#@ViewID .btn-search"),
        btnAddParam: $("#@ViewID .btn-add-param"),
        btnClearParams: $("#@ViewID .btn-clear-search-params"),

        currSearchParams: [],
        selectedParamsContainer: $("#@ViewID .selected-parameters-container"),
    };

    var searchModelDataObj = @(ViewDataObj);

    $(document).ready(() => {
        var viewDataObj = @(ViewDataObj);

        Search.Initialize(viewDataObj);
    });
</script>