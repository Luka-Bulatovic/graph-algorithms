@model GraphCanvasModel

@{
    string ViewID = string.Format("GraphCanvasView_{0}", Guid.NewGuid().ToString().Replace("-", ""));
    string ViewDataObj = string.Format("{0}_ViewData", ViewID);
}

<div id="@ViewID" class="graph-canvas-container">
    <div class="context-menu">
        <div class="item context-item-delete-edge">Delete Edge</div>
        <div class="item context-item-start-adding-edge">Start Adding Edge</div>
        <div class="item context-item-finish-adding-edge">Finish Adding Edge</div>
    </div>

    <div class="graph-container"></div>
    <div class="status-bar">
        <span class="status-bar-fullscreen">
            <i class="fa fa-expand" aria-hidden="true"></i>
        </span>
    </div>
</div>

<script type="text/javascript">
    var @(ViewDataObj) = {
        viewID: "@ViewID",
        contextMenu: $("#@ViewID .context-menu"),
        container: $("#@ViewID .graph-container"),
        statusBar: $("#@ViewID .status-bar"),
        network: null,
        nodes: @Html.Raw(Model.NodesJSON),
        edges: @Html.Raw(Model.EdgesJSON),
        graphEdit: {
            newEdgeStartNode: null,
            newEdgeEndNode: null
        }
    };

    $(document).ready(() => {
        var viewDataObj = @(ViewDataObj);

        GraphCanvasPartial.Initialize(viewDataObj);
    });
</script>