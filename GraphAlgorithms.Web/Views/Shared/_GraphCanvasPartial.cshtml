@model GraphCanvasModel

@{
    string ViewID = string.Format("GraphCanvasView_{0}", Guid.NewGuid().ToString().Replace("-", ""));
    string ViewDataObj = string.Format("{0}_ViewData", ViewID);

    bool showHeader = true;
}

<div id="@ViewID" class="graph-canvas-container">
    <div class="canvas-header @(showHeader ? "flex" : "hidden")">
        <div class="flex flex-row w-full">
            <div class="w-1/3"><b>ID:</b> @Model.ID</div>
            <div class="w-1/3"><b>Action:</b> @Model.Graph.actionTypeName</div>
            <div class="w-1/3"><b>Date:</b> @Model.Graph.createdDate.ToString("yyyy-MM-dd")</div>
        </div>
        <div class="flex flex-row w-full">
            <div class="w-1/3"><b>Order:</b> @Model.Graph.nodes.Count</div>
            <div class="w-1/3"><b>Size:</b> @Model.Graph.edges.Count</div>
            <div class="w-1/3"><b>Wiener Index:</b> @Model.Graph.score</div>
        </div>
        <div class="flex flex-row w-full">
            <div class="w-full"><b>Class:</b> @Model.Graph.classNames</div>
        </div>
    </div>

    <div class="context-menu">
        <div class="item context-item-add-node">Add Node</div>
        <div class="item context-item-delete-node">Delete Node</div>
        <div class="item context-item-delete-edge">Delete Edge</div>
        <div class="item context-item-start-adding-edge">Start Adding Edge</div>
        <div class="item context-item-finish-adding-edge">Finish Adding Edge</div>
    </div>

    <div class="graph-container"></div>
    <div class="status-bar">
        <span class="status-msg"></span>

        <div class="status-bar-buttons">
            <button type="button" class="btn-edit @(Model.ShowEditButton ? "" : "hidden")">
                <i class="fas fa-pencil-alt"></i> Edit
            </button>
            <button type="button" class="btn-save @(Model.ShowSaveButton ? "" : "hidden")">
                <i class="fas fa-save"></i> Save
            </button>
            <button type="button" class="btn-save-as-new @(Model.ShowSaveAsNewButton ? "" : "hidden")">
                <i class="fas fa-save"></i><i class="fas fa-plus"></i> Save as New
            </button>
            <button type="button" class="btn-fullscreen">
                <i class="fa fa-expand" aria-hidden="true"></i>
            </button>
        </div>
    </div>
</div>

<script type="text/javascript">
    var @(ViewDataObj) = {
        viewID: "@ViewID",
        graphID: @Model.Graph.id,
        canvasContainer: $("#@(ViewID).graph-canvas-container"),
        contextMenu: $("#@ViewID .context-menu"),
        graphContainer: $("#@ViewID .graph-container"),
        statusBar: $("#@ViewID .status-bar"),
        statusMsg: $("#@ViewID .status-msg"),
        btnSave: $("#@ViewID .status-bar .btn-save"),
        btnFullScreen: $("#@ViewID .status-bar .btn-fullscreen"),
        network: null,
        nodes: @Html.Raw(Model.NodesJSON),
        edges: @Html.Raw(Model.EdgesJSON),
        graphEdit: {
            newEdgeStartNode: null,
            newEdgeEndNode: null
        }
    };

    $(document).ready(() => {
        var viewDataObj = @(ViewDataObj);

        GraphCanvas.Initialize(viewDataObj);
    });
</script>