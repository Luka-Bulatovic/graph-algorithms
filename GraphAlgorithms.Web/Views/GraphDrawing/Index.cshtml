@model GraphDrawingModel

<div class="mb-2">
    <h3>Shortcuts:</h3>
    <ul class="pl-8 list-disc">
        <li>(A) to add new Node</li>
        <li>(E) to add new Edge</li>
        <li>(D) to delete selected elements</li>
        <li>(ESC) to close edit mode</li>
    </ul>
</div>

@if(Model.IsViewOnly)
{
    @Html.Partial("_AddToCustomSet", Model.CustomSetModel)
}

<form action="@Url.Action("Store", "GraphDrawing")" method="post">
    <div class="container w-full h-192 flex flex-row">
        <div class="@(Model.IsEditing ? "w-1/2" : "w-full")">
            @Html.Partial("_GraphCanvas", Model.CreateGraphCanvasModel)
        </div>

        @if (Model.IsEditing)
        {
            <div class="w-1/2">
                @Html.Partial("_GraphCanvas", Model.EditGraphCanvasModel)
            </div>
        }
    </div>
</form>

<script type="text/javascript">
    $(document).ready(() => {
        var graphID = @(Model.CreateGraphCanvasModel.Graph.id);

        $(window).on('keydown', (e) => {
            var k = e.key.toLowerCase();

            switch (k) {
                case 'a':
                    EventBus.emit('canvasAddNode', { id: graphID });
                    break;
                case 'e':
                    EventBus.emit('canvasAddEdge', { id: graphID });
                    break;
                case 'd':
                    EventBus.emit('canvasDeleteSelected', { id: graphID });
                    break;
                case 'escape':
                    EventBus.emit('canvasCloseEdit', { id: graphID });
                    break;
                default:
                    break;
            }
        });

        @if (Model.IsViewOnly && Model.CreateGraphCanvasModel.Graph.id > 0)
            {
            <text>
            setTimeout(() => {
                EventBus.emit('customSetGraphAdd', { id: graphID });
            }, 500);
            </text>
        }
    });
</script>