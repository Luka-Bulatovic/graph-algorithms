@model GraphLibraryModel

@{
    int itemsPerRow = 3;
    int numberOfRows = (int)Math.Ceiling((decimal)Model.Graphs.Count / (decimal)itemsPerRow);
}

<div class="container">
    @if(Model.ForActionID > 0)
    {
        <h1 class="font-semibold text-2xl mb-8">
            Action# @Model.ForActionID
        </h1>
    }

    <!-- Search -->
    <div class="w-full">
        @Html.Partial("_Search", Model.SearchModel)
    </div>

    @if (Model.AllowAddingToCustomGraphSets)
    {
        <div class="w-full mb-2">
            <button type="button" class="btn-add-to-custom-set">
                <i class="fas fa-add"></i> Add to Custom Set
            </button>
            <button type="button" class="btn-save-as-custom-set">
                <i class="fas fa-save"></i> Save as new Custom Set
            </button>
        </div>

        <!-- Modal for Custom Graph Set -->
        <div id="custom-set-modal" class="hidden modal">
            <div class="modal-content">
                <div class="modal-title">Modal Title</div>
                <form action="@Url.Action("SaveToCustomSet", "GraphLibrary")" method="post">
                    <div class="modal-body">
                        <input type="hidden" asp-for="ForActionID" />
                        <input type="hidden" asp-for="CustomSetModel.CustomGraphClassSaveType" id="CustomGraphClassSaveType" name="CustomGraphClassSaveType" />

                        <label asp-for="CustomSetModel.NewCustomSetName" class="hidden form-label new-custom-set-fields"></label>
                        <input type="text" asp-for="CustomSetModel.NewCustomSetName" name="NewCustomSetName" class="hidden form-input-field new-custom-set-fields" />

                        <label asp-for="CustomSetModel.ExistingCustomSet" class="hidden form-label existing-custom-set-fields"></label>
                        <select asp-for="CustomSetModel.ExistingCustomSetID" name="ExistingCustomSetID" asp-items="Model.CustomSetModel.ExistingCustomSet" class="hidden existing-custom-set-fields sl-searchby mr-2 form-input-field">
                            <option value="-1">- Please select -</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn-confirm-modal">Accept</button>
                        <button class="btn-close-modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    }

    <div class="flex flex-row justify-end mb-2">
        <button type="button" class="btn-grid-view-type @(Model.ViewType == GraphLibraryViewType.Grid ? "bg-gray-300" : "bg-gray-200") p-2 hover:bg-gray-300 mr-2 rounded">
            <i class="fa-solid fa-grip"></i>
        </button>
        <button type="button" class="btn-table-view-type @(Model.ViewType == GraphLibraryViewType.Table ? "bg-gray-300" : "bg-gray-200") p-2 hover:bg-gray-300 rounded">
            <i class="fa-solid fa-bars"></i>
        </button>
    </div>

    @for(int i = 0; i < numberOfRows; i++)
    {
        <div class="library-row w-full flex flex-row">
            @for(int j = 0; j < itemsPerRow; j++)
            {
                if (i * itemsPerRow + j < Model.Graphs.Count)
                {
                    <div class="library-item w-1/3 h-192">
                        @{
                            var model = new GraphCanvasModel(
                                Model.Graphs[i * itemsPerRow + j],
                                showEditButton: true
                            );
                        }
                        @Html.Partial("_GraphCanvas", model)
                    </div>
                }
            }
        </div>
    }

    <!-- Pagination -->
    @Html.Partial("_Pagination", Model.PaginationInfo)

    <script type="text/javascript">
        $(document).ready(function () {
            $(".btn-add-to-custom-set").on('click', (e) => {
                $(".modal-title").html("Add to Existing Custom Graph Set");
                $("#CustomGraphClassSaveType").val(1);

                $(".existing-custom-set-fields").removeClass("hidden");
                $(".new-custom-set-fields").addClass("hidden");

                $("#custom-set-modal").removeClass("hidden");
            });

            $(".btn-save-as-custom-set").on('click', (e) => {
                $(".modal-title").html("Save as New Custom Graph Set");
                $("#CustomGraphClassSaveType").val(2);

                $(".new-custom-set-fields").removeClass("hidden");
                $(".existing-custom-set-fields").addClass("hidden");

                $("#custom-set-modal").removeClass("hidden");
            });

            $(".btn-close-modal").on('click', (e) => {
                $("#custom-set-modal").addClass("hidden");
            });

            $(".btn-grid-view-type").on('click', (e) => {
                if (typeof (searchModelDataObj) === 'object') {
                    searchModelDataObj.baseUrl = '/GraphLibrary/Index';
                    searchModelDataObj.btnSearch.trigger('click');
                }
            });

            $(".btn-table-view-type").on('click', (e) => {
                if (typeof (searchModelDataObj) === 'object') {
                    searchModelDataObj.baseUrl = '/GraphLibrary/IndexTable';
                    searchModelDataObj.btnSearch.trigger('click');
                }
            });

        });
    </script>
</div>